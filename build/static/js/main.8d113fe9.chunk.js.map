{"version":3,"sources":["components/Icons/Icons.js","context/ContextProvider.js","components/Navbar/Navbar.js","components/Layout/index.js","components/Layout/Layout.js","components/ShuffleTeam/ShuffleTeam.js","components/HostConfiguration/HostConfiguration.js","components/GameScore/GameScore.js","components/TriviaBoard/TriviaBoard.js","components/TriviaInterface/TriviaInterface.js","components/BoughtDefensesBoard/BoughtDefensesBoard.js","components/BoughtDefensesBoard/index.js","components/Timer/Timer.js","components/GameInterface/GameInterface.js","components/DefenseBoard/DefenseBoard.js","components/HostInterface/HostInterface.js","components/BuyingInterface/BuyingInterface.js","components/PlayerInformation/PlayerInformation.js","components/GameScore/index.js","components/PlayerInterface/PlayerInterface.js","components/LobbyInterface/LobbyInterface.js","components/ChatInterface/ChatInterface.js","App.js","reportWebVitals.js","index.js"],"names":["MedtronicsIcon","width","height","viewBox","xmlns","d","fill","CrownIcon","SendIcon","socket","io","connect","Context","createContext","ThemeContextProvider","children","useState","gameStage","setGameStage","nbOfTeams","setNbOfTeams","nbOfRounds","setNbOfRounds","timeForEachRound","setTimeForEachRound","hasTriviaRound","setHasTriviaRound","difficulty","setDifficulty","nbOfDefenses","setNbOfDefenses","isHost","setIsHost","isInLobby","setIsInLobby","alias","setAlias","lobbyId","setLobbyId","teamInfo","setTeamInfo","myTeamId","setMyTeamId","isTeamLeader","setIsTeamLeader","teamLeader","setTeamLeader","triviaQuestion","setTriviaQuestion","triviaAnswer","setTriviaAnswer","hasSubmittedTrivia","setHasSubmittedTrivia","submittedTriviaAnswers","setSubmittedTriviaAnswers","disableGetTriviaQuestion","setDisableGetTriviaQuestion","roundCount","setRoundCount","userEarnings","setUserEarnings","userDefenses","setUserDefenses","selectedDefenses","setSelectedDefenses","boughtDefenses","setBoughtDefenses","rolledAttack","setRolledAttack","scores","setScores","defensesToSubmit","setDefensesToSubmit","bestDefenses","setBestDefenses","playedDefenses","setPlayedDefenses","hasSubmittedDefenses","setHasSubmittedDefenses","resetTimer","setResetTimer","chatMessagesAll","setChatMessagesAll","chatMessagesTeam","setChatMessagesTeam","hideTeamChat","setHideTeamChat","hideAllChat","setHideAllChat","useEffect","on","info","triviaReward","defenses","sort","a","b","Name","attack","message","alert","removeAllListeners","Array","parseInt","forEach","team","index","student","id","socketId","avgTurn","Math","ceil","length","i","myLeaderStartTurn","myLeaderEndTurn","emit","host_gets_trivia_question","newTriviaQuestion","noMoreTriviaQuestions","Provider","value","host_create_lobby","student_join_lobby","console","log","status","host_move_student","oldTeamId","newTeamId","host_start_game","student_submit_trivia_answer","teamId","host_ends_trivia_round","student_buy_defenses","host_start_next_defense_round","host_end_game","student_play_defenses","attackId","AttackID","chat_sendToAll","chat_sendToTeam","useStyles","makeStyles","rightToolbar","marginLeft","marginRight","typography","flexGrow","color","fontSize","appbar","background","Navbar","useContext","classes","Box","sx","AppBar","className","position","Container","maxWidth","Toolbar","disableGutters","justifyContent","Typography","Layout","overflow","positon","ShuffleTeam","theme","gridStyling","boxShadow","borderRadius","margin","typographyStyling","headerStyling","backgroundColor","borderTop","borderRight","borderLeft","border","playerStyling","borderBottom","padding","alignItems","map","item","Grid","container","xs","align","child","FormControl","fullWidth","InputLabel","Select","label","onChange","event","target","MenuItem","createTheme","palette","primary","main","secondary","HostConfiguration","ThemeProvider","component","onSubmit","fontFamily","p","top","left","transform","display","flexDirection","variant","TextField","required","type","autoFocus","placeholder","labelId","spacing","Button","onClick","head","fontWeight","body","winnerStyling","py","GameScore","teamScore","setTeamScore","scoreBoxStyling","marginTop","scoreArray","tempScore","teamID","score","push","sorted","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","TableBody","data","scope","TriviaBoard","Answer","answer","TriviaInterface","boxStyling","m","Question","Option1","Option2","Option3","Option4","ButtonGroup","disabled","StyledTooltip","styled","props","Tooltip","tooltip","BoughtDefensesBoard","style","defense","title","defenseDescritpion","arrow","placement","defenseName","Timer","initialSeconds","seconds","setSeconds","myInterval","setInterval","clearInterval","GameInterface","activeCellStyling","gutterBottom","Card","marginBottom","CardContent","Description","size","defenseID","defenseDescription","some","tempDefense","slice","handleChange","minHeight","handleSuggestDefenses","DefenseBoard","bestDefense","PointValue","eachTeamsPlayedDefenses","playedDefense","e","HostInterface","allDoneBuyingDefenses","setAllDoneBuyingDefenses","React","aTeamIsNotDone","textAlign","BuyingInterface","isChecked","setIsChecked","sortBy","setSortBy","getUserDefense","name","cost","description","currentIndex","tempDefenseList","removeDefense","defenseCost","done","lassName","FormHelperText","stickyHeader","row","DefenseID","FormGroup","FormControlLabel","control","Checkbox","checked","fontStyle","handleShare","PlayerInfromation","PlayerInterface","PlayerInformation","LobbyInterFace","trim","ChatInterface","selectedChatType","setSelectedChatType","textTeam","setTextTeam","textAll","setTextAll","messagesEndRefAll","createRef","messagesEndRefTeam","current","scrollIntoView","behavior","scrollToBottomAll","scrollToBottomTeam","textFieldStyling","buttonStyling","right","bottom","chatMessageUserNameStyling","marginX","List","maxHeight","chatMessage","ListItem","ListItemText","ref","onKeyUp","keyCode","preventDefault","document","getElementById","click","IconButton","App","withStyles","root","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d113fe9.chunk.js","sourcesContent":["import { Icon } from '@material-ui/core';\r\n\r\n//exporting the medtronics icon svg\r\nexport const MedtronicsIcon = () => {\r\n  return (\r\n    <svg width=\"130px\" height=\"50px\" viewBox=\"0 0 35 6.5 \" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n        d=\"m8.884 3.295c-.047-.582-.35-.923-.962-.923-.565 0-.914.357-.976.923zm.914.217c0 .186-.015.38-.046.535h-2.79c.1.465.495.752 1.24.752h.01l.007-.001a3.128 3.128 0 0 0 .212-.01l.058-.004a2.7 2.7 0 0 0 .874-.241l.064-.031c.055-.028.108-.058.16-.089h.024v.785c-.408.247-.887.39-1.4.39v-.003l-.055.002c-1.404 0-2.171-.798-2.171-1.961 0-1.248.79-2.07 1.938-2.07s1.876.814 1.876 1.946m-9.667 2.007h.954l.178-3.34.039-.907h.015l.202.907.775 3.34h1.195l.783-3.34.193-.907h.016l.039.907.186 3.34h.992l-.327-5.348h-1.58l-.714 3.21-.155.813h-.015l-.163-.814-.713-3.209h-1.582zm16.41.078c-.89 0-1.395-.41-1.395-1.34v-1.83h-1.07v1.945c0 .287.11.403.342.403.054 0 .116 0 .186-.015h.023v.76a2.082 2.082 0 0 1 -.418.046c-.528 0-.853-.201-.993-.643-.279.434-.72.674-1.27.674-.985 0-1.784-.767-1.784-2.023 0-1.24.799-2.008 1.783-2.008.488 0 .892.186 1.17.527v-1.922h.962v1.473h1.07v-.924h.96v.923h1.032v.783h-1.031v1.784c0 .387.193.573.566.573.17 0 .286-.015.441-.054h.024v.79a2.625 2.625 0 0 1 -.597.078m-4.395-.814c.65 0 1.015-.503 1.015-1.209 0-.698-.364-1.202-1.015-1.202-.66 0-1 .504-1 1.202 0 .706.34 1.21 1 1.21m6.38-1.295c0-.628.325-.977.945-.977.108 0 .225.015.333.047h.016v-.9a1.087 1.087 0 0 0 -.38-.062c-.465 0-.775.287-.954.752v-.705h-.922v3.876h.961zm3.348 2.108c-1.217 0-2.039-.884-2.039-2.015s.822-2.016 2.04-2.016c1.208 0 2.03.884 2.03 2.016s-.822 2.015-2.03 2.015m0-.83c.689 0 1.045-.503 1.045-1.185s-.356-1.186-1.046-1.186c-.674 0-1.054.503-1.054 1.186s.38 1.186 1.054 1.186m3.506-1.411c0-.597.302-.985.86-.985.55 0 .807.365.807.985v2.163h.96v-2.202c0-.93-.48-1.752-1.526-1.752-.558 0-.93.28-1.14.698v-.62h-.922v3.876h.961zm4.325-2.659c0 .31-.248.574-.573.574a.57.57 0 1 1 .573-.574m.536 4.822a2.392 2.392 0 0 1 -.473.054c-.737 0-1.132-.388-1.132-1.1v-2.83h.969v2.76c0 .255.124.38.388.38.061 0 .139-.009.224-.024h.024zm.092-1.938c0-1.132.822-2.016 2.047-2.016.349 0 .744.086 1.039.248v.853h-.024a1.8 1.8 0 0 0 -.945-.264c-.737 0-1.132.504-1.132 1.179s.395 1.178 1.132 1.178a1.8 1.8 0 0 0 .945-.264h.024v.853c-.295.163-.69.248-1.04.248-1.224 0-2.046-.884-2.046-2.015\"\r\n        fill=\"#224a87\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const CrownIcon = () => {\r\n  return (\r\n    <svg width=\"150px\" height=\"20px\" viewBox=\"0 0 35 15 \" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill=\"#FFC240\" d=\"M5 16L3 5L8.5 10L12 4L15.5 10L21 5L19 16H5M19 19C19 19.6 18.6 20 18 20H6C5.4 20 5 19.6 5 19V18H19V19Z\" />;\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const SendIcon = () => {\r\n  return (\r\n    <svg width=\"30px\" height=\"30px\" viewBox=\"-8 5 35 15 \" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill=\"currentColor\" d=\"M2,21L23,12L2,3V10L17,12L2,14V21Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\n\r\nimport io from \"socket.io-client\";\r\n//establishes a socket io connection to the server\r\nconst socket = io.connect(\"https://cyberblock.herokuapp.com/\");\r\n\r\nexport const Context = createContext({});\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n\r\n\tconst [gameStage, setGameStage] = useState('CONFIG');\r\n\r\n\tconst [nbOfTeams, setNbOfTeams] = useState(2);\r\n\tconst [nbOfRounds, setNbOfRounds] = useState(5);\r\n\tconst [timeForEachRound, setTimeForEachRound] = useState(120);\r\n\tconst [hasTriviaRound, setHasTriviaRound] = useState(true);\r\n\tconst [difficulty, setDifficulty] = useState(1);\r\n\tconst [nbOfDefenses, setNbOfDefenses] = useState(2);\r\n\r\n\t// a state that decides whether a player is host or student ans puts them in a correct interface\r\n\tconst [isHost, setIsHost] = useState(false);\r\n\t// a state to see if users are in the set lobby or not\r\n\tconst [isInLobby, setIsInLobby] = useState(false);\r\n\t//a state that holds the alias of each player that joined\r\n\tconst [alias, setAlias] = useState(\"\");\r\n\t//state that hold the lobbyId created by the host\r\n\tconst [lobbyId, setLobbyId] = useState(\"\");\r\n\t// a state to store all team information once student joins and host moves the players\r\n\tconst [teamInfo, setTeamInfo] = useState([]);\r\n\tconst [myTeamId, setMyTeamId] = useState(-1);\r\n\tconst [isTeamLeader, setIsTeamLeader] = useState(false);\r\n\tconst [teamLeader, setTeamLeader] = useState();\r\n\r\n\t//a state to hold trivia questions\r\n\tconst [triviaQuestion, setTriviaQuestion] = useState();\r\n\tconst [triviaAnswer, setTriviaAnswer] = useState();\r\n\tconst [hasSubmittedTrivia, setHasSubmittedTrivia] = useState(false);\r\n\tconst [submittedTriviaAnswers, setSubmittedTriviaAnswers] = useState([]);\r\n\tconst [disableGetTriviaQuestion, setDisableGetTriviaQuestion] = useState(false);\r\n\r\n\t// a state to store the current round in the game\r\n\tconst [roundCount, setRoundCount] = useState(0);\r\n\t// a state that handles user earning in the buying state\r\n\tconst [userEarnings, setUserEarnings] = useState(40);\r\n\t// a state to store all the user defense obtained from the database\r\n\tconst [userDefenses, setUserDefenses] = useState([]);\r\n\t// state that holds the user selected defense in the buying phase\r\n\tconst [selectedDefenses, setSelectedDefenses] = useState([]);\r\n\tconst [boughtDefenses, setBoughtDefenses] = useState([]);\r\n\r\n\r\n\t//state that holds the attack rolled by the host\r\n\tconst [rolledAttack, setRolledAttack] = useState(\"\");\r\n\t//a state to hold scores for each team\r\n\tconst [scores, setScores] = useState([]);\r\n\r\n\tconst [defensesToSubmit, setDefensesToSubmit] = useState([]);\r\n\tconst [bestDefenses, setBestDefenses] = useState([]);\r\n\tconst [playedDefenses, setPlayedDefenses] = useState([]);\r\n\tconst [hasSubmittedDefenses, setHasSubmittedDefenses] = useState(false);\r\n\r\n\r\n\tconst [resetTimer, setResetTimer] = useState(false);\r\n\r\n\t// Context for Chat Box\r\n\t// All chat messages\r\n\tconst [chatMessagesAll, setChatMessagesAll] = useState([]);\r\n\t// Team chat messages\r\n\tconst [chatMessagesTeam, setChatMessagesTeam] = useState([]);\r\n\tconst [hideTeamChat, setHideTeamChat] = useState(true);\r\n\tconst [hideAllChat, setHideAllChat] = useState(true);\r\n\r\n\t//recalls all the socket events each time the socket changes to retrive the infromation from the server\r\n\tuseEffect(() => {\r\n\t\tsocket.on(\"new_student_joined_lobby\", (info) => {\r\n\t\t\tsetTeamInfo(info);\r\n\t\t});\r\n\t\tsocket.on(\"host_moved_student\", (info) => {\r\n\t\t\tsetTeamInfo(info);\r\n\t\t});\r\n\r\n\t\tsocket.on(\"host_started_game\", (hasTriviaRound) => {\r\n\t\t\tif (hasTriviaRound) {\r\n\t\t\t\tsetGameStage('TRIVIA');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetGameStage('BUY_DEFENSE');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsocket.on(\"host_ended_trivia_round\", () => {\r\n\t\t\tsetGameStage('BUY_DEFENSE');\r\n\t\t});\r\n\r\n\t\tsocket.on(\"student_receives_trivia_question\", (triviaQuestion) => {\r\n\t\t\tsetTriviaQuestion(triviaQuestion);\r\n\t\t\tsetSubmittedTriviaAnswers([]);\r\n\t\t\tsetHasSubmittedTrivia(false);\r\n\t\t});\r\n\r\n\t\tsocket.on(\"student_submitted_trivia_answer\", (submittedTriviaAnswers) => {\r\n\t\t\tsetSubmittedTriviaAnswers(submittedTriviaAnswers);\r\n\t\t});\r\n\r\n\t\tsocket.on(\"student_update_money\", (triviaReward) => {\r\n\t\t\tsetUserEarnings(userEarnings => userEarnings + triviaReward);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"student_receive_defenses\", (defenses) => {\r\n\t\t\t//default to alphabetical\r\n\t\t\tdefenses.sort((a, b) => {\r\n\t\t\t\treturn (a.Name < b.Name) ? -1 : (a.Name > b.Name) ? 1 : 0\r\n\t\t\t})\r\n\t\t\tsetUserDefenses(defenses);\r\n\t\t});\r\n\r\n\t\tsocket.on(\"student_bought_defenses\", (boughtDefenses) => {\r\n\t\t\tsetBoughtDefenses(boughtDefenses);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"student_receive_attack\", ({ attack, playedDefenses }) => {\r\n\t\t\tsetDefensesToSubmit([]);\r\n\t\t\tsetResetTimer(true);\r\n\t\t\tsetRoundCount(roundCount => roundCount + 1);\r\n\t\t\tsetRolledAttack(attack);\r\n\t\t\tsetGameStage(\"DEFEND_ATTACK\");\r\n\t\t\tsetHasSubmittedDefenses(false);\r\n\t\t\tsetBestDefenses([]);\r\n\t\t\tsetPlayedDefenses(playedDefenses);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"host_ended_game\", () => {\r\n\t\t\tsetGameStage(\"GAME_END\");\r\n\t\t})\r\n\r\n\t\tsocket.on(\"student_played_defenses\", ({ scores, bestDefenses, playedDefenses }) => {\r\n\t\t\tsetScores(scores);\r\n\t\t\tsetBestDefenses(bestDefenses);\r\n\t\t\tsetPlayedDefenses(playedDefenses);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"chat_receiveFromAll\", ({ alias, message }) => {\r\n\t\t\tsetChatMessagesAll(chatMessagesAll => [...chatMessagesAll, { alias, message }]);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"chat_receiveFromTeam\", ({ alias, message }) => {\r\n\t\t\tsetChatMessagesTeam(chatMessagesTeam => [...chatMessagesTeam, { alias, message }]);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"student_team_leader_changed\", ({ alias }) => {\r\n\t\t\tsetTeamLeader(alias);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"student_disconnected\", (teamInfo) => {\r\n\t\t\tsetTeamInfo(teamInfo);\r\n\t\t})\r\n\r\n\t\tsocket.on(\"host_disconnected\", () => {\r\n\t\t\tif (gameStage !== \"GAME_END\") {\r\n\t\t\t\talert(\"Unfortunately, the host of this lobby has disconnected, which means this game session can no longer continue. Please refresh the page to start a new game session.\")\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.removeAllListeners();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (nbOfTeams !== '') {\r\n\t\t\tsetScores(Array(parseInt(nbOfTeams)).fill(0));\r\n\t\t\tsetPlayedDefenses(Array(parseInt(nbOfTeams)).fill([]));\r\n\t\t}\r\n\t}, [nbOfTeams]);\r\n\r\n\tuseEffect(() => {\r\n\t\tteamInfo.forEach((team, index) => {\r\n\t\t\tteam.forEach((student) => {\r\n\t\t\t\tif (socket.id === student.socketId) {\r\n\t\t\t\t\tsetMyTeamId(index);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}, [teamInfo]);\r\n\r\n\tuseEffect(() => {\r\n\t\t//after changing team or changing round, it sets isTeamLeader to true or vice versa.\r\n\t\tif (teamInfo[myTeamId] && (gameStage !== \"WAITING\" && gameStage !== 'CONFIG')) {\r\n\t\t\tconst avgTurn = Math.ceil(parseInt(nbOfRounds) / teamInfo[myTeamId].length);\r\n\t\t\tfor (let i = 0; i < teamInfo[myTeamId].length; i++) {\r\n\t\t\t\tif (socket.id === teamInfo[myTeamId][i].socketId) {\r\n\t\t\t\t\tlet myLeaderStartTurn = i * avgTurn;\r\n\t\t\t\t\tlet myLeaderEndTurn = (i + 1) * avgTurn;\r\n\r\n\t\t\t\t\tif (roundCount === 0 && myLeaderStartTurn === 0) {\r\n\t\t\t\t\t\tsetIsTeamLeader(true);\r\n\t\t\t\t\t\tsocket.emit(\"student_team_leader_change\", ({ lobbyId, alias, myTeamId }));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (myLeaderStartTurn < roundCount && roundCount <= myLeaderEndTurn) {\r\n\t\t\t\t\t\tsetIsTeamLeader(true);\r\n\t\t\t\t\t\talert(\"You are the team leader of this round! Discuss with your team before playing defenses.\");\r\n\t\t\t\t\t\tsocket.emit(\"student_team_leader_change\", ({ lobbyId, alias, myTeamId }));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetIsTeamLeader(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [teamInfo, myTeamId, roundCount, gameStage]);\r\n\r\n\t//this is a workaround for the socket.on not reading real-time value bug\r\n\tuseEffect(() => {\r\n\t\tif ((!isHost) && (gameStage === 'TRIVIA' || gameStage === 'BUY_DEFENSE')) {\r\n\t\t\tsetHideTeamChat(false);\r\n\t\t}\r\n\t\tif (isHost && gameStage === 'BUY_DEFENSE') {\r\n\t\t\tsocket.emit(\"host_start_buy_phase\", lobbyId);\r\n\t\t}\r\n\t\tif (isHost && gameStage === 'TRIVIA'){\r\n\t\t\thost_gets_trivia_question();\r\n\t\t}\r\n\t}, [gameStage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tboughtDefenses.forEach((defenses, index) => {\r\n\t\t\tif ((myTeamId === index) && (defenses.length > 0)) {\r\n\t\t\t\tsetSelectedDefenses(defenses);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [boughtDefenses]);\r\n\r\n\t//Start-------------Lobby Events------------Start//\r\n\tconst host_create_lobby = () => {\r\n\t\tsocket.emit(\r\n\t\t\t\"host_create_lobby\",\r\n\t\t\t{\r\n\t\t\t\tnbOfTeams,\r\n\t\t\t\tnbOfRounds,\r\n\t\t\t\tnbOfDefenses,\r\n\t\t\t\ttimeForEachRound,\r\n\t\t\t\tuserEarnings,\r\n\t\t\t\thasTriviaRound,\r\n\t\t\t\tdifficulty,\r\n\t\t\t},\r\n\t\t\t(lobbyId) => {\r\n\t\t\t\tsetLobbyId(lobbyId);\r\n\t\t\t}\r\n\t\t);\r\n\t\tsetHideAllChat(false);\r\n\t};\r\n\r\n\tconst student_join_lobby = () => {\r\n\t\tconsole.log(\"Student joining lobby with lobbyId:\", lobbyId, \"and alias:\", alias);\r\n\t\tif (lobbyId !== \"\" && alias !== \"\") {\r\n\t\t\tconsole.log(\"Lobby and alias present, joining lobby\")\r\n\t\t\tsocket.emit(\r\n\t\t\t\t\"student_join_lobby\",\r\n\t\t\t\t{ lobbyId, alias },\r\n\t\t\t\t({\r\n\t\t\t\t\tstatus,\r\n\t\t\t\t\tnbOfTeams,\r\n\t\t\t\t\tnbOfRounds,\r\n\t\t\t\t\tnbOfDefenses,\r\n\t\t\t\t\ttimeForEachRound,\r\n\t\t\t\t\tuserEarnings,\r\n\t\t\t\t\thasTriviaRound,\r\n\t\t\t\t\tdifficulty,\r\n\t\t\t\t\tteamInfo,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tif (status === \"SUCCESS\") {\r\n\t\t\t\t\t\tsetNbOfTeams(nbOfTeams);\r\n\t\t\t\t\t\tsetNbOfRounds(nbOfRounds);\r\n\t\t\t\t\t\tsetNbOfDefenses(nbOfDefenses);\r\n\t\t\t\t\t\tsetTimeForEachRound(timeForEachRound);\r\n\t\t\t\t\t\tsetUserEarnings(parseInt(userEarnings));\r\n\t\t\t\t\t\tsetHasTriviaRound(hasTriviaRound);\r\n\t\t\t\t\t\tsetDifficulty(difficulty);\r\n\t\t\t\t\t\tsetTeamInfo(teamInfo);\r\n\r\n\t\t\t\t\t\tsetIsInLobby(true);\r\n\t\t\t\t\t\tsetGameStage('WAITING');\r\n\t\t\t\t\t} else if (status === \"NOT_EXIST\") {\r\n\t\t\t\t\t\talert(\"Lobby does not exist. Please make sure you enter the correct lobby code given by your host.\");\r\n\t\t\t\t\t\tsetIsInLobby(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (status === \"ALREADY_STARTED\") {\r\n\t\t\t\t\t\talert(\"Unable to join this lobby because it has already started its game session.\");\r\n\t\t\t\t\t\tsetIsInLobby(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tsetHideAllChat(false);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Lobby and alias not present, aborting\")\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tconst host_start_game = () => {\r\n\t\tsocket.emit(\"host_start_game\", lobbyId);\r\n\t}\r\n\r\n\tconst host_move_student = (lobbyId, socketId, oldTeamId, newTeamId) => {\r\n\t\tsocket.emit(\"host_move_student\", {\r\n\t\t\tlobbyId,\r\n\t\t\tsocketId,\r\n\t\t\toldTeamId,\r\n\t\t\tnewTeamId,\r\n\t\t});\r\n\t};\r\n\t//End-------------Lobby Events------------End//\r\n\r\n\t//Start-------------Trivia Events------------Start//\r\n\tconst host_gets_trivia_question = () => {\r\n\t\tsocket.emit(\"host_gets_trivia_question\", lobbyId, (newTriviaQuestion, noMoreTriviaQuestions) => {\r\n\t\t\tsetTriviaQuestion(newTriviaQuestion);\r\n\t\t\tsetDisableGetTriviaQuestion(noMoreTriviaQuestions);\r\n\t\t});\r\n\t};\r\n\r\n\tconst student_submit_trivia_answer = () => {\r\n\t\tsocket.emit(\r\n\t\t\t\"student_submit_trivia_answer\",\r\n\t\t\t{ lobbyId, teamId: myTeamId, triviaAnswer }\r\n\t\t);\r\n\t};\r\n\r\n\tconst host_ends_trivia_round = () => {\r\n\t\tsocket.emit(\"host_ends_trivia_round\", lobbyId);\r\n\t};\r\n\t//End-------------Trivia Events------------End//\r\n\r\n\tconst student_buy_defenses = () => {\r\n\t\tconsole.log(\"Before sending defenses in, selected defenses are: \", selectedDefenses);\r\n\t\tsocket.emit(\"student_buy_defenses\", ({ lobbyId, teamId: myTeamId, defenses: selectedDefenses }));\r\n\t}\r\n\r\n\tconst host_start_next_defense_round = () => {\r\n\t\tsocket.emit(\"host_start_next_defense_round\", lobbyId);\r\n\t}\r\n\r\n\tconst host_end_game = () => {\r\n\t\tsocket.emit(\"host_end_game\", lobbyId);\r\n\t}\r\n\r\n\tconst student_play_defenses = () => {\r\n\t\tsocket.emit(\"student_play_defenses\", { lobbyId: lobbyId, teamId: myTeamId, defenses: defensesToSubmit, attackId: rolledAttack.AttackID });\r\n\t}\r\n\r\n\tconst chat_sendToAll = (message) => {\r\n\t\t// Do not allow all chat messages to be send if it is empty\r\n\t\tif (message.length > 0) {\r\n\t\t\tsocket.emit(\"chat_sendToAll\", ({ lobbyId, alias, message }));\r\n\t\t}\r\n\t}\r\n\r\n\tconst chat_sendToTeam = (message) => {\r\n\t\t// Do not allow team chat messages to be send if it is empty\r\n\t\tif (message.length > 0) {\r\n\t\t\tsocket.emit(\"chat_sendToTeam\", ({ lobbyId, alias, teamId: myTeamId, message }))\r\n\t\t}\r\n\t}\r\n\r\n\t// providing access to these value to all the interfaces\r\n\treturn (\r\n\t\t<Context.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tgameStage, setGameStage,\r\n\r\n\t\t\t\t//lobby configuration\r\n\t\t\t\tisHost, setIsHost,\r\n\t\t\t\tisInLobby, setIsInLobby,\r\n\t\t\t\talias, setAlias,\r\n\t\t\t\tlobbyId, setLobbyId,\r\n\t\t\t\tnbOfTeams, setNbOfTeams,\r\n\t\t\t\tnbOfRounds, setNbOfRounds,\r\n\t\t\t\ttimeForEachRound, setTimeForEachRound,\r\n\t\t\t\tuserEarnings, setUserEarnings,\r\n\t\t\t\thasTriviaRound, setHasTriviaRound,\r\n\t\t\t\tdifficulty, setDifficulty,\r\n\t\t\t\tnbOfDefenses, setNbOfDefenses,\r\n\r\n\t\t\t\t//lobby waiting page\r\n\t\t\t\tteamInfo, setTeamInfo,\r\n\t\t\t\troundCount, setRoundCount,\r\n\t\t\t\tmyTeamId, setMyTeamId,\r\n\t\t\t\tisTeamLeader, setIsTeamLeader,\r\n\t\t\t\tteamLeader, setTeamLeader,\r\n\r\n\t\t\t\t//trivia page\r\n\t\t\t\ttriviaQuestion, setTriviaQuestion,\r\n\t\t\t\ttriviaAnswer, setTriviaAnswer,\r\n\t\t\t\thasSubmittedTrivia, setHasSubmittedTrivia,\r\n\t\t\t\tsubmittedTriviaAnswers, setSubmittedTriviaAnswers,\r\n\t\t\t\tdisableGetTriviaQuestion, setDisableGetTriviaQuestion,\r\n\r\n\t\t\t\t//buy defenses\r\n\t\t\t\tuserDefenses, setUserDefenses,\r\n\t\t\t\tselectedDefenses, setSelectedDefenses,\r\n\t\t\t\tboughtDefenses, setBoughtDefenses,\r\n\r\n\t\t\t\t//actual gameplay\r\n\t\t\t\trolledAttack, setRolledAttack,\r\n\t\t\t\tscores, setScores,\r\n\t\t\t\tdefensesToSubmit, setDefensesToSubmit,\r\n\t\t\t\tbestDefenses, setBestDefenses,\r\n\t\t\t\tplayedDefenses, setPlayedDefenses,\r\n\t\t\t\thasSubmittedDefenses, setHasSubmittedDefenses,\r\n\t\t\t\tresetTimer, setResetTimer,\r\n\r\n\t\t\t\tchatMessagesTeam, setChatMessagesTeam,\r\n\t\t\t\tchatMessagesAll, setChatMessagesAll,\r\n\t\t\t\thideTeamChat, setHideTeamChat,\r\n\t\t\t\thideAllChat, setHideAllChat,\r\n\r\n\t\t\t\t//socket events\r\n\t\t\t\thost_create_lobby, student_join_lobby, host_move_student,\r\n\t\t\t\thost_start_game,\r\n\t\t\t\thost_gets_trivia_question, student_submit_trivia_answer, host_ends_trivia_round,\r\n\t\t\t\tstudent_buy_defenses,\r\n\t\t\t\thost_start_next_defense_round, host_end_game,\r\n\t\t\t\tstudent_play_defenses,\r\n\t\t\t\tchat_sendToAll, chat_sendToTeam\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\nexport default ThemeContextProvider;\r\n","import { AppBar, Box, Button, Container, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useState, useContext } from 'react';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { MedtronicsIcon } from \"../Icons/Icons\";\r\nimport { Context } from '../../context/ContextProvider'\r\n\r\nconst useStyles = makeStyles({\r\n    // This group of buttons will be aligned to the right\r\n    rightToolbar: {\r\n        marginLeft: \"auto\",\r\n        marginRight: -12\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        color: '#121212',\r\n        fontSize: '1.6rem'\r\n    },\r\n    appbar: {\r\n        background: '#dcdcdc'\r\n    }\r\n})\r\n\r\nconst Navbar = ({ }) => {\r\n\r\n    // Grab the elements from ContextProvider.js\r\n    const { lobbyId, roundCount, hideTeamChat, teamLeader } = useContext(Context);\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar className={classes.appbar} position=\"static\">\r\n                <Container maxWidth=\"x1\">\r\n                    <Toolbar disableGutters sx={{ justifyContent: \"space-between\" }}>\r\n                        <MedtronicsIcon />\r\n                        <Typography className={classes.typography}>\r\n                            CyberBlock\r\n                        </Typography>\r\n                        <Typography className={classes.typography}>\r\n                            {roundCount\r\n                                ? `Round ${roundCount}`\r\n                                : `Lobby`\r\n                            }\r\n                        </Typography>\r\n                        <section>\r\n                            <Typography className={classes.typography}>\r\n                                {!hideTeamChat && `Current Team Leader: ${teamLeader}`\r\n                                }\r\n                            </Typography>\r\n                            <Typography className={classes.typography}>\r\n                                {lobbyId\r\n                                    ? `Lobby ID: ${lobbyId}`\r\n                                    : `Lobby ID: Join a lobby!`\r\n                                }\r\n                            </Typography>\r\n                        </section>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import Layout from \"./Layout\";\r\nexport default Layout;","import * as React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\nimport { MedtronicsIcon } from \"../Icons/Icons\";\r\nimport Navbar from \"../Navbar/Navbar\"\r\n\r\n// layout for all the interfaces\r\nconst Layout = ({ children }) => {\r\n\tconst base = {\r\n\t\tp: \"2rem\",\r\n\t};\r\n\tconst layoutStyling = {\r\n\t\toverflow: \"auto\",\r\n\t\tpositon: \"relative\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Navbar/>\r\n\t\t\t<Box sx={layoutStyling}>\r\n\t\t\t\t{children}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default Layout;\r\n","import * as React from \"react\";\r\nimport {\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tGrid,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport { useContext, Fragment } from \"react\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//the page is for the host specifically to changes the team members from each team\r\nconst ShuffleTeam = ({ children }) => {\r\n\t//shared states\r\n\tconst { teamInfo, host_move_student, lobbyId } = useContext(Context);\r\n\r\n\t// when the host changes the team of each player call the host_moved_student event\r\n\tconst handleChange = (newTeamId, socketId, oldTeamId) => {\r\n\t\thost_move_student(lobbyId, socketId, oldTeamId, newTeamId);\r\n\t};\r\n\t\r\n\t// Styling\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tgridStyling: {\r\n\t\t\tboxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n\t\t\tborderRadius: '5px',\r\n\t\t\tposition: 'relative',\r\n\t\t\tmargin: '20px',\r\n\t\t},\r\n\t\ttypographyStyling: {\r\n\t\t\tfontSize: '19px',\r\n\t\t\tmargin: '15px',\r\n\t\t},\r\n\t\theaderStyling: {\r\n\t\t\tbackgroundColor: '#FAF9F6',\r\n\t\t\tborderTop: 1,\r\n\t\t\tborderRight: 1,\r\n\t\t\tborderLeft: 1,\r\n\t\t\tborder: '1px solid #D3D3D3',\r\n\t\t},\r\n\t\tplayerStyling: {\r\n\t\t\tborderBottom: 1,\r\n\t\t\tborderRight: 0,\r\n\t\t\tborderLeft: 0,\r\n\t\t\tborder: '1px solid #D3D3D3',\r\n\t\t\tpadding: 4,\r\n\t\t\talignItems: \"center\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t{teamInfo.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container className={classes.gridStyling}\r\n\t\t\t\t  \t>\r\n\t\t\t\t\t\t<Grid item xs={12} align=\"center\" className={classes.headerStyling}>\r\n\t\t\t\t\t\t\t<Typography className={classes.typographyStyling}>Team {index + 1}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{item.map((child) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={8} className={classes.playerStyling}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.typographyStyling}>{child.alias}</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.playerStyling}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"select-label-round\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tSwitch Team\r\n\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Round\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.socketId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{teamInfo.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={index}>Team {index + 1}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default ShuffleTeam;\r\n","import * as React from \"react\";\r\nimport {\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tButton,\r\n\tInput,\r\n\tTypography,\r\n\tTextField,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#F5F5F5',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#DCDCDC',\r\n\t\t},\r\n\t},\r\n  });\r\n\r\n// page to allow the host to add configurations to the game\r\nconst HostConfiguration = ({ children }) => {\r\n\t// shared states\r\n\tconst {\r\n\t\tsetGameStage,\r\n\t\tsetNbOfTeams,\r\n\t\tsetNbOfRounds,\r\n\t\tsetTimeForEachRound,\r\n\t\tsetUserEarnings,\r\n\t\tnbOfDefenses,\r\n\t\tsetNbOfDefenses,\r\n\t\thasTriviaRound,\r\n\t\tsetHasTriviaRound,\r\n\t\tdifficulty,\r\n\t\tsetDifficulty,\r\n\t\thost_create_lobby,\r\n\t\tsetIsHost,\r\n\t\tsetAlias,\r\n\t\tsetIsInLobby\r\n\t} = useContext(Context);\r\n\r\n\tconst boxStyling = {\r\n\t\tfontFamily: 'Titillium Web',\r\n\t\tborder: \"1px solid black\",\r\n\t\tborderRadius: \"20px\",\r\n\t\tbackgroundColor: \"#DCDCDC\",\r\n\t\tp: \"10px\",\r\n\t\talign: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tposition: \"absolute\",\r\n\t\twidth: 500,\r\n\t\ttop: \"50%\",\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\"\r\n\t};\r\n\t// handles the submission of the configuration by calling the create lobby event\r\n\tconst handleOnSubmit = () => {\r\n\t\t// Changes to the next interface\r\n\t\tsetGameStage('WAITING');\r\n\t\thost_create_lobby();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t<Box component=\"form\" onSubmit={handleOnSubmit} sx={boxStyling} boxShadow={3}>\r\n\t\t\t<Typography variant=\"h5\">Create New Lobby</Typography>\r\n\t\t\t<br></br>\r\n\t\t\t<TextField\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\trequired\r\n\t\t\t\tfullWidth\r\n\t\t\t\tlabel=\"Number of teams\"\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tautoFocus\r\n\t\t\t\tonChange={(event) => setNbOfTeams(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\trequired\r\n\t\t\t\tfullWidth\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Number of Rounds\"\r\n\t\t\t\tonChange={(event) => setNbOfRounds(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\trequired\r\n\t\t\t\tfullWidth\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Round Duration (in seconds)\"\r\n\t\t\t\tonChange={(event) => setTimeForEachRound(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\trequired\r\n\t\t\t\tfullWidth\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tplaceholder=\"Enter Amount of Starting Money\"\r\n\t\t\t\tonChange={(event) => setUserEarnings(event.target.value)}\r\n\t\t\t/>\r\n\r\n\t\t\t<br /><br />\r\n\t\t\t<FormControl fullWidth>\r\n\t\t\t\t<InputLabel id=\"select-nbOfDefenses-label\">Number of Defenses Played Each Round</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tfontFamily= 'arial'\r\n\t\t\t\t\tlabelId=\"select-nbOfDefenses-label\"\r\n\t\t\t\t\tid=\"select-nbOfDefenses\"\r\n\t\t\t\t\tvalue={nbOfDefenses}\r\n\t\t\t\t\tlabel=\"nbOfDefenses\"\r\n\t\t\t\t\tonChange={(event) => setNbOfDefenses(event.target.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<br></br>\r\n\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<InputLabel id=\"select-difficulty-label\">Difficulty</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId=\"select-difficulty-label\"\r\n\t\t\t\t\t\t\tid=\"select-difficulty\"\r\n\t\t\t\t\t\t\tvalue={difficulty}\r\n\t\t\t\t\t\t\tlabel=\"Difficulty\"\r\n\t\t\t\t\t\t\tonChange={(event) => setDifficulty(event.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value={1}>Beginner</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={2}>Intermediate</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={3}>Expert</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<InputLabel id=\"select-label-hasTriviaRound\">Play Trivia Rounds?</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId=\"select-label-hasTriviaRound\"\r\n\t\t\t\t\t\t\tid=\"select-hasTrivia\"\r\n\t\t\t\t\t\t\tvalue={hasTriviaRound}\r\n\t\t\t\t\t\t\tlabel=\"hasTrivia\"\r\n\t\t\t\t\t\t\tonChange={(event) => setHasTriviaRound(event.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value={true}>Yes</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={false}>No</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate The Lobby\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsInLobby(false);\r\n\t\t\t\t\t\t\tsetIsHost(false);\r\n\t\t\t\t\t\t\tsetAlias(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nexport default HostConfiguration;\r\n","import * as React from 'react';\r\nimport { Box, TableContainer, Table, TableBody, TableRow, TableCell, TableHead } from '@material-ui/core';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CrownIcon } from '../Icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  head: {\r\n    width: 500,\r\n    color: 'black',\r\n    backgroundColor: '#FAF9F6',\r\n    fontWeight: 700,\r\n    fontSize: '17px',\r\n  },\r\n  body: {\r\n    fontWeight: 500,\r\n    borderBottom: 'none',\r\n  },\r\n  winnerStyling: {\r\n    color: 'black',\r\n    height: '30px',\r\n\r\n    fontWeight: 600,\r\n    fontSize: '17px',\r\n    py: '2%',\r\n    borderBottom: 'none',\r\n  },\r\n}));\r\n\r\n//Displays game scores for each team\r\nconst GameScore = ({ children }) => {\r\n  //importing shared states to dispaly the points per team\r\n  const { scores, roundCount, gameStage } = useContext(Context);\r\n  const [teamScore, setTeamScore] = useState([]);\r\n\r\n  const scoreBoxStyling = {\r\n    borderRadius: '9px',\r\n    marginTop: '45px',\r\n    marginLeft: '5px',\r\n    width: gameStage === 'DEFEND_ATTACK' ? '30%' : 'none',\r\n    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n    position: gameStage === 'DEFEND_ATTACK' ? 'absolute' : 'none',\r\n    left: gameStage === 'DEFEND_ATTACK' ? '69%' : 'none',\r\n    top: gameStage === 'DEFEND_ATTACK' ? '50%' : 'none',\r\n    width: gameStage === 'DEFEND_ATTACK' ? '400px' : 'none',\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const scoreArray = [];\r\n    scores.map((item, index) => {\r\n      const tempScore = {\r\n        teamID: index + 1,\r\n        score: item,\r\n      };\r\n      scoreArray.push(tempScore);\r\n    });\r\n    const sorted = [...scoreArray].sort((a, b) => {\r\n      return a.score > b.score ? -1 : a.score < b.score ? 1 : 0;\r\n    });\r\n    setTeamScore(sorted);\r\n  }, [scores]);\r\n\r\n  // displays the scores per team in a row and column format\r\n  return (\r\n    <Box sx={scoreBoxStyling}>\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.head}>Team</TableCell>\r\n              <TableCell align=\"right\" className={classes.head}>\r\n                Scores\r\n              </TableCell>\r\n              <TableCell className={classes.head}></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {teamScore.map((data, index) => {\r\n              return (\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\" className={index === 0 && data.score !== 0 ? classes.winnerStyling : classes.body}>\r\n                    Team {data.teamID}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" className={index === 0 && data.score !== 0 ? classes.winnerStyling : classes.body}>\r\n                    {data.score}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" className={index === 0 && data.score !== 0 ? classes.winnerStyling : classes.body}>\r\n                    {index === 0 && data.score !== 0 && roundCount !== 0 ? <CrownIcon /> : ''}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\nexport default GameScore;\r\n","import * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { Context } from '../../context/ContextProvider'\r\nimport {\r\n    Box,\r\n    TableContainer,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nconst TriviaBoard = ({ }) => {\r\n\r\n    const { submittedTriviaAnswers, triviaQuestion } = useContext(Context);;\r\n\r\n    const boxStyling = {\r\n        m: '20px',\r\n        p: '10px',\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Team</TableCell>\r\n                            <TableCell align=\"right\" sx={{ minWidth: 300 }}>\r\n                                Submitted Answer\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow key={'correctAnswer'}>\r\n                            <TableCell component=\"th\" scope=\"child\">\r\n                                Correct Answer\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                {triviaQuestion.Answer}\r\n                            </TableCell>;\r\n                        </TableRow>\r\n                        {submittedTriviaAnswers.map((answer, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell component=\"th\" scope=\"child\">\r\n                                        Team {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {answer}\r\n                                    </TableCell>;\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    );\r\n\r\n}\r\nexport default TriviaBoard;","import * as React from 'react';\r\nimport { Box, Button, ButtonGroup, Typography, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { useState, useContext } from 'react';\r\nimport { Context } from '../../context/ContextProvider'\r\nimport TriviaBoard from '../TriviaBoard/TriviaBoard';\r\n\r\nconst TriviaInterface = ({ isHost, isTeamLeader }) => {\r\n\r\n    const { host_gets_trivia_question, host_ends_trivia_round, triviaQuestion, triviaAnswer, setTriviaAnswer,\r\n        student_submit_trivia_answer, hasSubmittedTrivia, setHasSubmittedTrivia, submittedTriviaAnswers, myTeamId, disableGetTriviaQuestion } = useContext(Context);;\r\n\r\n    const boxStyling = {\r\n        m: '20px',\r\n        p: '10px',\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTriviaAnswer(event.target.value);\r\n    };\r\n\r\n    const handleSubmitAnswer = () => {\r\n        student_submit_trivia_answer();\r\n        setHasSubmittedTrivia(true);\r\n    }\r\n\r\n    if (isHost) {\r\n        return (\r\n            <Box>\r\n                <Box sx={boxStyling} >\r\n                    {triviaQuestion &&\r\n                        <Box sx={boxStyling} >\r\n                            <Typography align='center' variant='h6'>{`Trivia Question: ${triviaQuestion.Question}`}</Typography>\r\n                            <br />\r\n                            <Typography align='center' variant='h6'>{`Option 1: ${triviaQuestion.Option1}`}</Typography>\r\n                            <Typography align='center' variant='h6'>{`Option 2: ${triviaQuestion.Option2}`}</Typography>\r\n\r\n                            {triviaQuestion.Option3 && <Typography align='center' variant='h6'>{`Option 3: ${triviaQuestion.Option3}`}</Typography>}\r\n                            {triviaQuestion.Option4 && <Typography align='center' variant='h6'>{`Option 4: ${triviaQuestion.Option4}`}</Typography>}\r\n                            <br />\r\n                            {/* <Typography align='center' variant='h6'>{`Correct Answer: ${triviaQuestion.Answer}`}</Typography> */}\r\n                        </Box>\r\n                    }\r\n                </Box>\r\n                <Box align='center'>\r\n                    <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n                        <Button align='center' variant=\"contained\" onClick={() => { host_ends_trivia_round() }}>End Trivia Round</Button>\r\n                        <Button variant=\"contained\" onClick={() => { host_gets_trivia_question() }} disabled={disableGetTriviaQuestion}>Next Trivia Question</Button>\r\n                    </ButtonGroup>\r\n                </Box>\r\n\r\n                {triviaQuestion && <TriviaBoard />}\r\n            </Box>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Box>\r\n                <Box sx={boxStyling} >\r\n                    {triviaQuestion\r\n                        ?\r\n                        <Box sx={boxStyling} >\r\n                            <Typography align='center' variant='h6'>{`Trivia Question: ${triviaQuestion.Question}`}</Typography>\r\n                            <br /><br />\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"trivia-answer-label\">Options</InputLabel>\r\n                                <Select\r\n                                    labelId=\"trivia-answer-label\"\r\n                                    id=\"trivia-select\"\r\n                                    value={triviaAnswer}\r\n                                    label=\"TriviaAnswer\"\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={triviaQuestion.Option1}>{triviaQuestion.Option1}</MenuItem>\r\n                                    <MenuItem value={triviaQuestion.Option2}>{triviaQuestion.Option2}</MenuItem>\r\n                                    {triviaQuestion.Option3 && <MenuItem value={triviaQuestion.Option3}>{triviaQuestion.Option3}</MenuItem>}\r\n                                    {triviaQuestion.Option3 && <MenuItem value={triviaQuestion.Option4}>{triviaQuestion.Option4}</MenuItem>}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br /> <br />\r\n                            {isTeamLeader ?\r\n                                <Box>\r\n                                    <Typography>You are the current team leader, discuss with your team before submitting your answer.</Typography>\r\n                                    <Button disabled={hasSubmittedTrivia} align='center' variant=\"contained\" onClick={() => handleSubmitAnswer()}>Submit Answer</Button>\r\n                                </Box>\r\n                                :\r\n                                <Typography>You are not the current team leader, discuss with your team to help your team leader pick the right answer.</Typography>\r\n                            }\r\n\r\n                            {submittedTriviaAnswers[myTeamId] && <TriviaBoard />}\r\n                        </Box>\r\n                        :\r\n                        <Typography align='center' variant='h6'>{`Waiting for a trivia question...`}</Typography>\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TriviaInterface;","import * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { Box, TableContainer, Table, TableBody, TableRow, TableCell, TableHead, Typography, Tooltip } from '@material-ui/core';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\n\r\nconst ToBeStyledTooltip = ({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ tooltip: className }} />\r\n);\r\n// Change the style of the tooltip\r\nconst StyledTooltip = styled(ToBeStyledTooltip)(({ theme }) => ({\r\n  fontSize: '15px',\r\n  backgroundColor: '#F5F5F5',\r\n  color: 'rgba(0, 0, 0, 15)',\r\n  border: '2px solid #dadde9',\r\n}));\r\n\r\nconst BoughtDefensesBoard = ({ }) => {\r\n  const { boughtDefenses } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    headerStyling: {\r\n      fontWeight: 700,\r\n      fontSize: '16px',\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer style={{ border: '1px solid #D3D3D3', borderRadius: '5px', marginTop: '20px' }}>\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n          <TableHead\r\n            style={{\r\n              backgroundColor: '#FAF9F6',\r\n            }}\r\n          >\r\n            <TableRow>\r\n              <TableCell className={classes.headerStyling}>Team</TableCell>\r\n              <TableCell align=\"right\" sx={{ minWidth: 300 }} className={classes.headerStyling}>\r\n                Bought Defenses\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boughtDefenses.map((defenses, index) => {\r\n              return (\r\n                <TableRow key={index + 1}>\r\n                  <TableCell component=\"th\" scope=\"child\">\r\n                    Team {index + 1}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {defenses.map((defense) => {\r\n                      return <StyledTooltip title={defense.defenseDescritpion} arrow placement='right-end'><Typography>{defense.defenseName}</Typography></StyledTooltip>;\r\n                    })}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\nexport default BoughtDefensesBoard;\r\n","import BoughtDefensesBoard from \"./BoughtDefensesBoard\";\r\nexport default BoughtDefensesBoard;","import { Typography, Box } from \"@material-ui/core\";\r\nimport { useState, useEffect} from \"react\";\r\n\r\nconst Timer = ({ initialSeconds, resetTimer, setResetTimer}) => {\r\n    const [seconds, setSeconds] = useState(initialSeconds);\r\n\r\n    useEffect(()=>{\r\n        if(resetTimer){\r\n            setSeconds(initialSeconds);\r\n            setResetTimer(false);\r\n        }\r\n    }, [resetTimer])\r\n\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            if (seconds === 0) {\r\n                clearInterval(myInterval)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <Box>\r\n            {seconds === 0\r\n                ? null\r\n                : <Typography align='center' variant='h5'> Timer: {seconds < 10 ? `0${seconds}` : seconds} </Typography>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Timer;","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  ButtonGroup,\r\n  Grid,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { useState, useContext } from 'react';\r\nimport GameScore from '../GameScore/GameScore';\r\nimport Timer from '../Timer/Timer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// this page displays the actual game play witht the attack rolled by the host ad user selected defense as buttons\r\nconst GameInterface = ({ isHost }) => {\r\n  //importing shared states\r\n  const {\r\n    roundCount,\r\n    nbOfRounds,\r\n    timeForEachRound,\r\n    resetTimer,\r\n    setResetTimer,\r\n    rolledAttack,\r\n    selectedDefenses,\r\n    defensesToSubmit,\r\n    setDefensesToSubmit,\r\n    hasSubmittedDefenses,\r\n    setHasSubmittedDefenses,\r\n    isTeamLeader,\r\n    host_start_next_defense_round,\r\n    host_end_game,\r\n    student_play_defenses,\r\n    nbOfDefenses,\r\n    chat_sendToTeam\r\n  } = useContext(Context);\r\n\r\n  //handles the user submitted defenses\r\n  const handleChange = (defenseID, defenseName, defenseDescription) => {\r\n    //avoids repetition\r\n    if (defensesToSubmit.some(defense => defense.defenseID === defenseID)) {\r\n      return;\r\n    }\r\n\r\n    //this statement prohibits the user from submitting more than selected number of defenses against the attack\r\n    if (defensesToSubmit.length < nbOfDefenses) {\r\n      //adds the selected defense to selectedItem list\r\n      const tempDefense = {\r\n        defenseName: defenseName,\r\n        defenseID: defenseID,\r\n        defenseDescription: defenseDescription,\r\n      };\r\n      setDefensesToSubmit([...defensesToSubmit, tempDefense]);\r\n    }\r\n    // this function allows the user to delete first defense from the selected item list and add the new defense to the selected item list\r\n    else {\r\n      const tempDefense = {\r\n        defenseName: defenseName,\r\n        defenseID: defenseID,\r\n        defenseDescription: defenseDescription,\r\n      };\r\n      setDefensesToSubmit([...defensesToSubmit.slice(1), tempDefense]);\r\n    }\r\n  };\r\n\r\n  const handleEndGame = () => {\r\n    host_end_game();\r\n  };\r\n\r\n  const handleNextRound = () => {\r\n    setResetTimer(true);\r\n    host_start_next_defense_round();\r\n  };\r\n\r\n  const handleSubmitDefenses = () => {\r\n    setHasSubmittedDefenses(true);\r\n    student_play_defenses();\r\n  };\r\n\r\n  const handleClearDefenses = () => {\r\n    setDefensesToSubmit([]);\r\n  }\r\n\r\n  const handleSuggestDefenses = () => {\r\n    let message = `suggests playing the following defenses: `;\r\n    defensesToSubmit.map((item, index) => {\r\n      message += item.defenseName;\r\n      if (index < defensesToSubmit.length - 1) {\r\n        message += ', ';\r\n      }\r\n    });\r\n    chat_sendToTeam(message);\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    activeCellStyling: {\r\n      fontWeight: 600,\r\n      color: 'white',\r\n      backgroundColor: '#088F8F',\r\n      fontSize: '16px',\r\n      padding: '10px',\r\n      margin: '10px',\r\n    },\r\n    typographyStyling: {\r\n      fontSize: '20px',\r\n      padding: '10px',\r\n      margin: '10px',\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      {isTeamLeader ? (\r\n        <Typography gutterBottom className={classes.activeCellStyling}>\r\n          Team Lead{' '}\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.activeCellStyling}>Team Mate</Typography>\r\n      )}\r\n      <Timer\r\n        initialSeconds={timeForEachRound}\r\n        resetTimer={resetTimer}\r\n        setResetTimer={setResetTimer}\r\n      />\r\n      {/* <Grid container justifyContent=\"flex-end\">\r\n        <Typography>{`Current round: ${roundCount}/${nbOfRounds}`}</Typography>\r\n      </Grid> */}\r\n\r\n      <GameScore />\r\n      <Box>\r\n        <Card style={{ marginTop: '15px', marginBottom: '20px' }}>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n              {`Attack Name: ${rolledAttack.Name} `}\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n              {`Attack Description: ${rolledAttack.Description} `}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      {isHost ? (\r\n        <Box align=\"center\">\r\n          <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n            <Button\r\n              align=\"center\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                handleEndGame();\r\n              }}\r\n            >\r\n              End Game\r\n            </Button>\r\n            {roundCount < nbOfRounds && (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  handleNextRound();\r\n                }}\r\n              >\r\n                Next Round\r\n              </Button>\r\n            )}\r\n          </ButtonGroup>\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Typography className={classes.typographyStyling}>Select up to {nbOfDefenses} defenses to play:</Typography>\r\n          <Grid container spacing={2}>\r\n            {selectedDefenses.map(item => {\r\n              return (\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      handleChange(item.defenseID, item.defenseName, item.defenseDescritpion)\r\n                    }\r\n                  >\r\n                    <Typography variant=\"h7\" align=\"center\" color=\"text.secondary\" gutterBottom>\r\n                      {item.defenseName}\r\n                    </Typography>\r\n                  </Button>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Box>\r\n            <Box sx={{ marginTop: '25px', marginBottom: '5px' }}>\r\n              <Typography>Selected Defense: </Typography>\r\n            </Box>\r\n            <Card>\r\n              <Box sx={{ margin: '15px', minHeight: '50px' }}>\r\n                {defensesToSubmit.map(item => {\r\n                  return <Typography>{item.defenseName}</Typography>;\r\n                })}\r\n              </Box>\r\n            </Card>\r\n          </Box>\r\n          <br></br>\r\n          <br></br>\r\n          {isTeamLeader ? (\r\n            <Box>\r\n              <Typography>\r\n                You are the current team leader, discuss with your team before submitting your\r\n                defenses.\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <Typography>\r\n              You are not the current team leader, discuss with your team to help your team leader\r\n              pick appropriate defenses.\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            disabled={!isTeamLeader || hasSubmittedDefenses}\r\n            variant=\"contained\"\r\n            onClick={() => handleSubmitDefenses()}\r\n            style={{ marginTop: '15px', marginBottom: '15px' }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleClearDefenses()}\r\n            style={{ marginTop: '15px', marginBottom: '15px', marginLeft: '15px' }}\r\n          >\r\n            Clear Selected\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleSuggestDefenses()}\r\n            style={{ marginTop: '15px', marginBottom: '15px', marginLeft: '15px' }}\r\n          >\r\n            Share Selected Defenses to Team Chat\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default GameInterface;\r\n","import * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { Typography, Box, TableContainer, Table, TableBody, TableRow, TableCell, TableHead, Tooltip } from '@material-ui/core';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\n\r\nconst ToBeStyledTooltip = ({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ tooltip: className }} />\r\n);\r\n// Change the style of the tooltip\r\nconst StyledTooltip = styled(ToBeStyledTooltip)(({ theme }) => ({\r\n  fontSize: '15px',\r\n  backgroundColor: '#F5F5F5',\r\n  color: 'rgba(0, 0, 0, 15)',\r\n  border: '2px solid #dadde9',\r\n}));\r\n\r\nconst DefenseBoard = ({ }) => {\r\n  const { playedDefenses, bestDefenses } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    headerStyling: {\r\n      fontWeight: 700,\r\n      fontSize: '16px',\r\n      backgroundColor: '#FAF9F6',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer style={{ border: '1px solid #D3D3D3', borderRadius: '5px', marginTop: '15px' }}>\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.headerStyling}>Team</TableCell>\r\n              <TableCell align=\"right\" sx={{ minWidth: 300 }} className={classes.headerStyling}>\r\n                Played Defenses\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow key={'correctAnswer'}>\r\n              <TableCell component=\"th\" scope=\"child\">\r\n                Best Defenses\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {bestDefenses.map((bestDefense) => {\r\n                  return (<StyledTooltip title={bestDefense.Description} arrow placement='right-end'><Typography>{`${bestDefense.Name} = ${bestDefense.PointValue} Points`}</Typography></StyledTooltip>);\r\n                })}\r\n              </TableCell>\r\n            </TableRow>\r\n            {playedDefenses.map((eachTeamsPlayedDefenses, index) => {\r\n              return (\r\n                <TableRow key={index + 1}>\r\n                  <TableCell component=\"th\" scope=\"child\">\r\n                    Team {index + 1}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {eachTeamsPlayedDefenses.map(playedDefense => {\r\n                      if (bestDefenses.some(e => e.Name === playedDefense.defenseName)) {\r\n                        return (<StyledTooltip title={playedDefense.defenseDescription} arrow placement='right-end'><Typography style={{color: 'red'}}>{playedDefense.defenseName} &#10003;</Typography></StyledTooltip>)\r\n                      } else {\r\n                        return (<StyledTooltip title={playedDefense.defenseDescription} arrow placement='right-end'><Typography>{playedDefense.defenseName}</Typography></StyledTooltip>)\r\n                      }\r\n                    })}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\nexport default DefenseBoard;\r\n","import * as React from \"react\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport ShuffleTeam from \"../ShuffleTeam/ShuffleTeam\";\r\nimport HostConfiguration from \"../HostConfiguration/HostConfiguration\";\r\nimport GameScore from \"../GameScore/GameScore\";\r\nimport TriviaInterface from \"../TriviaInterface/TriviaInterface\";\r\nimport BoughtDefensesBoard from \"../BoughtDefensesBoard\";\r\nimport GameInterface from \"../GameInterface/GameInterface\";\r\nimport DefenseBoard from \"../DefenseBoard/DefenseBoard\";\r\n\r\nconst HostInterface = ({ }) => {\r\n\tconst {\r\n\t\tlobbyId,\r\n\t\thasTriviaRound,\r\n\t\tgameStage,\r\n\t\thost_start_game,\r\n\t\tboughtDefenses,\r\n\t\thost_start_next_defense_round,\r\n\t\thost_gets_trivia_question\r\n\t} = useContext(Context);\r\n\r\n\tconst [allDoneBuyingDefenses, setAllDoneBuyingDefenses] = useState(false);\r\n\r\n\tconst boxStyling = {\r\n\t\tm: \"20px\",\r\n\t\tp: \"10px\",\r\n\t};\r\n\r\n\t//useEffect to decide if all teams have finished buying attacks\r\n\tReact.useEffect(() => {\r\n\t\tlet aTeamIsNotDone = true;\r\n\r\n\t\tboughtDefenses.forEach(team => {\r\n\t\t\tif (team.length === 0) {\r\n\t\t\t\taTeamIsNotDone = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (boughtDefenses.length === 0) {\r\n\t\t\taTeamIsNotDone = false;\r\n\t\t}\r\n\t\tsetAllDoneBuyingDefenses(aTeamIsNotDone);\r\n\t}, [boughtDefenses]);\r\n\r\n\tconst handleStartTrivia = () => {\r\n\t\thost_start_game();\r\n\t}\r\n\r\n\tconst handleStartBuying = () => {\r\n\t\thost_start_game();\r\n\t}\r\n\r\n\tconst handleStartDefendAttack = () => {\r\n\t\thost_start_next_defense_round();\r\n\t}\r\n\r\n\tif (gameStage === 'CONFIG') {\r\n\t\treturn (\r\n\t\t\t<HostConfiguration />\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'WAITING') {\r\n\t\treturn (\r\n\t\t\t<Box sx={boxStyling}>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t>{`Lobby created, use code ${lobbyId} to join.`}</Typography>\r\n\r\n\t\t\t\t<ShuffleTeam />\r\n\t\t\t\t<Box sx={boxStyling}>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{hasTriviaRound\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleStartTrivia}>\r\n\t\t\t\t\t\t\tStart Game (Trivia Round)\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleStartBuying}>\r\n\t\t\t\t\t\t\tStart Game (Buy Defense Phase)\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t);\r\n\t}\r\n\r\n\tif (gameStage === 'TRIVIA') {\r\n\t\treturn (\r\n\t\t\t<TriviaInterface isHost={true} isTeamLeader={false} />\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'BUY_DEFENSE') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t{allDoneBuyingDefenses\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h6\">Teams have finished buying defenses.</Typography>\r\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h6\">You can start whenever you see fit.</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h6\">Students are buying defenses...</Typography>\r\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h6\">Meanwhile, you can view each team's purchased defenses once a team finishes their purchase.</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t}\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t<Button variant=\"contained\" align=\"center\" onClick={() => handleStartDefendAttack()}>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<BoughtDefensesBoard />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'DEFEND_ATTACK') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<GameInterface isHost={true} />\r\n\t\t\t\t<DefenseBoard />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'GAME_END') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">This game session is over.</Typography>\r\n\t\t\t\t<GameScore />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n};\r\nexport default HostInterface;\r\n","import * as React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  TableHead,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Card,\r\n  CardContent,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Tooltip,\r\n  FormHelperText,\r\n} from '@material-ui/core';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\n\r\n//this page displys all the defense for players to purchase those defenses\r\n\r\nconst BuyingInterface = ({}) => {\r\n  // importing shared states between different components\r\n  const {\r\n    alias,\r\n    myTeamId,\r\n    isTeamLeader,\r\n    userEarnings,\r\n    setUserEarnings,\r\n    userDefenses,\r\n    setUserDefenses,\r\n    selectedDefenses,\r\n    setSelectedDefenses,\r\n    boughtDefenses,\r\n    setGameStage,\r\n    student_buy_defenses,\r\n    chat_sendToTeam,\r\n  } = useContext(Context);\r\n\r\n  const boxStyling = {\r\n    p: 6,\r\n    minWidth: '85%',\r\n  };\r\n\r\n  const ToBeStyledTooltip = ({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ tooltip: className }} />\r\n  );\r\n  // Change the style of the tooltip\r\n  const StyledTooltip = styled(ToBeStyledTooltip)(({ theme }) => ({\r\n    fontSize: '16px',\r\n    backgroundColor: '#F5F5F5',\r\n    color: 'rgba(0, 0, 0, 15)',\r\n    border: '2px solid #dadde9',\r\n  }));\r\n\r\n  // a state to store the checkboxstate and see if its is checked or not\r\n  const [isChecked, setIsChecked] = useState({});\r\n  const [sortBy, setSortBy] = useState('Alphabetical');\r\n\r\n  // when the user toggles a checkbox the function removes the defense associated with the checkbox from the collection of user chosen defenses\r\n  const removeDefense = (index, cost) => {\r\n    //creates a shallow copy of defense list to removes the selected index from the list\r\n    const tempDefenseList = [\r\n      ...selectedDefenses.slice(0, index),\r\n      ...selectedDefenses.slice(index + 1, selectedDefenses.length),\r\n    ];\r\n    //settting the temp list as the new selected defense list\r\n    setSelectedDefenses(tempDefenseList);\r\n    // adding the cost of the deleted item back to the total money of the user\r\n    setUserEarnings(userEarnings + cost);\r\n  };\r\n\r\n  const getUserDefense = (value, name, cost, index, id, description) => {\r\n    // adds the selected defense to the selected defense list in the specific index\r\n    //the specific index helps keep track of the checkstate of the defense\r\n\r\n    const currentIndex = { ...isChecked };\r\n    currentIndex[id] = value;\r\n    setIsChecked(currentIndex);\r\n\r\n    // if the user unclicks the checkbox and the defense in in the seelcted defense list the defense is removed from the selectd defense list\r\n    if (!value && selectedDefenses.length > 0 && userEarnings >= 0) {\r\n      selectedDefenses.map((item, index) => {\r\n        if (item.defenseName === name) {\r\n          removeDefense(index, item.defenseCost);\r\n        }\r\n      });\r\n    }\r\n    //else if the uer clicks on the checkbox to select the denfense it adds the defense to the selected defense list and the removes the defense cost from the total earnings\r\n    else if (value && selectedDefenses.length >= 0 && userEarnings > 0) {\r\n      const tempDefense = {\r\n        defenseName: name,\r\n        defenseCost: cost,\r\n        defenseID: id,\r\n        defenseDescritpion: description,\r\n        done: value,\r\n      };\r\n      setSelectedDefenses([...selectedDefenses, tempDefense]);\r\n\r\n      setUserEarnings(userEarnings - cost);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setGameStage('DONE_BUYING');\r\n    student_buy_defenses();\r\n  };\r\n\r\n  const handleShare = () => {\r\n    let message = `suggests buying the following defenses: `;\r\n    selectedDefenses.map((item, index) => {\r\n      message += item.defenseName;\r\n      if (index < selectedDefenses.length - 1) {\r\n        message += ', ';\r\n      }\r\n    });\r\n    chat_sendToTeam(message);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (boughtDefenses.length !== 0 && boughtDefenses[myTeamId].length !== 0) {\r\n      setGameStage('DONE_BUYING');\r\n    }\r\n  }, [boughtDefenses]);\r\n\r\n  React.useEffect(() => {\r\n    if (sortBy === 'Alphabetical') {\r\n      const sorted = [...userDefenses].sort((a, b) => {\r\n        return a.Name < b.Name ? -1 : a.Name > b.Name ? 1 : 0;\r\n      });\r\n      setUserDefenses(sorted);\r\n    }\r\n    if (sortBy === 'CostLowToHigh') {\r\n      const sorted = [...userDefenses].sort((a, b) => {\r\n        return a.cost < b.cost ? -1 : a.cost > b.cost ? 1 : 0;\r\n      });\r\n      setUserDefenses(sorted);\r\n    }\r\n    if (sortBy === 'CostHighToLow') {\r\n      const sorted = [...userDefenses].sort((a, b) => {\r\n        return a.cost > b.cost ? -1 : a.cost < b.cost ? 1 : 0;\r\n      });\r\n      setUserDefenses(sorted);\r\n    }\r\n  }, [sortBy]);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    headerStyling: {\r\n      fontWeight: 700,\r\n      fontSize: '16px',\r\n      backgroundColor: '#FAF9F6',\r\n    },\r\n    activeCellStyling: {\r\n      fontWeight: 600,\r\n      color: 'white',\r\n      backgroundColor: '#088F8F',\r\n      fontSize: '16px',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box sx={boxStyling}>\r\n      {isTeamLeader ? (\r\n        <Typography gutterBottom className={classes.activeCellStyling}>\r\n          Team Lead{' '}\r\n        </Typography>\r\n      ) : (\r\n        <Typography lassName={classes.activeCellStyling}>Team Mate</Typography>\r\n      )}\r\n\r\n      <Card>\r\n        <CardContent>\r\n          {isTeamLeader ? (\r\n            <Typography gutterBottom>{`You are the current team leader of team ${\r\n              myTeamId + 1\r\n            }, discuss with your team to decide what defenses to buy!`}</Typography>\r\n          ) : (\r\n            <Typography>{`You are not the current team leader of team ${\r\n              myTeamId + 1\r\n            }, discuss with your team to help your team leader decide what defenses to buy!`}</Typography>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <FormControl size=\"medium\">\r\n        <Select\r\n          fontFamily=\"arial\"\r\n          labelId=\"select-sortby-label\"\r\n          id=\"select-sortby\"\r\n          value={sortBy}\r\n          label=\"Sort By\"\r\n          onChange={event => setSortBy(event.target.value)}\r\n        >\r\n          <MenuItem value={'Alphabetical'}>Alphabetical</MenuItem>\r\n          <MenuItem value={'CostLowToHigh'}>Cost (Lowest to Highest)</MenuItem>\r\n          <MenuItem value={'CostHighToLow'}>Cost (Highest to Lowest)</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Sort By</FormHelperText>\r\n      </FormControl>\r\n\r\n      <Typography variant=\"h7\" color=\"text.secondary\" gutterBottom style={{ marginLeft: '15px' }}>\r\n        Earnings:${userEarnings}\r\n      </Typography>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <TableContainer\r\n        style={{\r\n          border: '1px solid #D3D3D3',\r\n          borderRadius: '5px',\r\n          height: '75vh',\r\n          overflow: 'auto',\r\n        }}\r\n      >\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.headerStyling}>Defenses</TableCell>\r\n              <TableCell align=\"right\" className={classes.headerStyling}>\r\n                Cost\r\n              </TableCell>\r\n              <TableCell align=\"right\" className={classes.headerStyling}>\r\n                Submission\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {userDefenses.map((row, index) => (\r\n              <StyledTooltip \r\n                title={row.Description} \r\n                arrow \r\n                placement=\"right-end\"\r\n                >\r\n                <TableRow\r\n                  key={row.Name}\r\n                  className={isChecked[row.DefenseID] ? classes.activeCellStyling : 'none'}\r\n                >\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={isChecked[row.DefenseID] ? classes.activeCellStyling : 'none'}\r\n                  >\r\n                    {row.Name}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ width: 160 }}\r\n                    align=\"right\"\r\n                    className={isChecked[row.DefenseID] ? classes.activeCellStyling : 'none'}\r\n                  >\r\n                    {row.cost}\r\n                  </TableCell>\r\n\r\n                  <TableCell style={{ width: 160 }} align=\"right\">\r\n                    <FormControl component=\"fieldset\" variant=\"standard\">\r\n                      <FormGroup>\r\n                        <FormControlLabel\r\n                          control={\r\n                            // The disabled prop checks if the cost of the selected defense is less than the total user earning, if so disbales the defense to restrict the user fromm purchasing that defense\r\n                            // onChange handles any time the user toggles the checkbox\r\n                            // the checkfeature retrives the value from the isChecked array\r\n                            <Checkbox\r\n                              key={row.label}\r\n                              onChange={event =>\r\n                                getUserDefense(\r\n                                  event.target.checked,\r\n                                  row.Name,\r\n                                  row.cost,\r\n                                  index,\r\n                                  row.DefenseID,\r\n                                  row.Description\r\n                                )\r\n                              }\r\n                              disabled={row.cost > userEarnings && !isChecked[row.DefenseID]}\r\n                              checked={isChecked[row.DefenseID]}\r\n                            />\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </StyledTooltip>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <br></br>\r\n      {isTeamLeader ? (\r\n        <Box sx={{ fontStyle: 'italic' }}>\r\n          <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n            Submit\r\n          </Button>\r\n          <Typography>\r\n            You are the team leader, hear your teammate's input first before making a decision!{' '}\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <Box sx={{ fontStyle: 'italic' }}>\r\n          <Button variant=\"contained\" onClick={() => handleShare()}>\r\n            Share Selected Defenses to Team Chat\r\n          </Button>\r\n          <Typography>\r\n            Only team leader can buy defenses, but you can share your input by selecting defenses\r\n            you think the team should buy and using the above button to share!{' '}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default BuyingInterface;\r\n","import * as React from \"react\";\r\nimport {\r\n\tBox,\r\n\tTableContainer,\r\n\tTable,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTableHead,\r\n\tGrid,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport { useContext, Fragment } from \"react\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//displays the current team member info and displays in a row and column format\r\nconst PlayerInfromation = ({}) => {\r\n\t//shared state\r\n\tconst { teamInfo } = useContext(Context);\r\n\t\r\n\t// Styling\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tgridStyling: {\r\n\t\t\tboxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n\t\t\tborderRadius: '5px',\r\n\t\t\tposition: 'relative',\r\n\t\t\tmargin: '20px',\r\n\t\t},\r\n\t\ttypographyStyling: {\r\n\t\t\tfontSize: '19px',\r\n\t\t\tmargin: '15px',\r\n\t\t},\r\n\t\theaderStyling: {\r\n\t\t\tbackgroundColor: '#FAF9F6',\r\n\t\t\tborderTop: 1,\r\n\t\t\tborderRight: 1,\r\n\t\t\tborderLeft: 1,\r\n\t\t\tborder: '1px solid #D3D3D3',\r\n\t\t},\r\n\t\tplayerStyling: {\r\n\t\t\tborderBottom: 1,\r\n\t\t\tborderRight: 0,\r\n\t\t\tborderLeft: 0,\r\n\t\t\tborder: '1px solid #D3D3D3',\r\n\t\t\tpadding: 4,\r\n\t\t\talignItems: \"center\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t{teamInfo.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container className={classes.gridStyling}\r\n\t\t\t\t  \t>\r\n\t\t\t\t\t\t<Grid item xs={12} align=\"center\" className={classes.headerStyling}>\r\n\t\t\t\t\t\t\t<Typography className={classes.typographyStyling}>Team {index + 1}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{item.map((child) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.playerStyling}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.typographyStyling}>{child.alias}</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default PlayerInfromation;\r\n","import GameScore from \"./GameScore\";\r\nexport default GameScore;","import * as React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport GameInterface from \"../GameInterface/GameInterface\";\r\nimport BuyingInterface from \"../BuyingInterface/BuyingInterface\";\r\nimport PlayerInformation from \"../PlayerInformation/PlayerInformation\";\r\nimport TriviaInterface from \"../TriviaInterface/TriviaInterface\";\r\nimport BoughtDefensesBoard from \"../BoughtDefensesBoard\";\r\nimport GameScore from \"../GameScore\";\r\nimport DefenseBoard from \"../DefenseBoard/DefenseBoard\";\r\n\r\n// tha main player interface that handles the the change of pages for the players\r\nconst PlayerInterface = ({ }) => {\r\n\t// shared states\r\n\tconst {\r\n\t\tgameStage,\r\n\t\tisTeamLeader,\r\n\t\tplayedDefenses, myTeamId\r\n\t} = useContext(Context);\r\n\r\n\tif (gameStage === 'CONFIG') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t>{`Loading...`}</Typography>;\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'WAITING') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t>{`Waiting for host to start game...`}</Typography>\r\n\r\n\t\t\t\t<PlayerInformation />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'TRIVIA') {\r\n\t\treturn (\r\n\t\t\t<TriviaInterface isHost={false} isTeamLeader={isTeamLeader} />\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'BUY_DEFENSE') {\r\n\t\treturn (\r\n\t\t\t<BuyingInterface />\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'DONE_BUYING') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">Waiting for the host to start game...</Typography>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">Meanwhile, you can view each team's purchased defenses.</Typography>\r\n\t\t\t\t<BoughtDefensesBoard />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'DEFEND_ATTACK') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<GameInterface isHost={false} />\r\n\t\t\t\t{(playedDefenses[myTeamId].length !== 0) && <DefenseBoard />}\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameStage === 'GAME_END') {\r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">This game session is over.</Typography>\r\n\t\t\t\t<GameScore />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\r\n};\r\nexport default PlayerInterface;\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Box, Button, Container, Input, TextField, Typography } from \"@material-ui/core\";\r\nimport { Shadows } from \"@material-ui/system\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../../context/ContextProvider\";\r\nimport { createTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#F5F5F5',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#DCDCDC',\r\n\t\t},\r\n\t},\r\n\ttypography: {\r\n\r\n\t},\r\n  });\r\n\r\nconst LobbyInterFace = ({ children }) => {\r\n\tconst { setLobbyId, setIsInLobby, setIsHost, setAlias, setGameStage, student_join_lobby } = useContext(Context);\r\n\r\n\t//generic styling for the box\r\n\tconst boxStyling = {\r\n\t\tfontFamily: \"Titillium Web\",\r\n\t\tbackgroundColor: \"#DCDCDC\",\r\n\t\tborder: \"1px solid black\",\r\n\t\tborderRadius: \"20px\",\r\n\t\tp: 6,\r\n\t\talign: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tposition: \"absolute\",\r\n\t\twidth: 400,\r\n\t\ttop: \"50%\",\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\"\r\n\t};\r\n\r\n\tconst handleOnSubmit = () => {\r\n\t\tstudent_join_lobby();\r\n\t\tsetIsInLobby(true);\r\n\t}\r\n\r\n\tconst handleChangeLobbyId = (lobbyId) => {\r\n\t\tsetLobbyId(lobbyId.trim());\r\n\t}\r\n\r\n\r\nreturn (\r\n\t\t<Box sx={boxStyling} boxShadow={3}>\r\n\t\t\t<Box component=\"form\" onSubmit={handleOnSubmit} >\r\n\t\t\t\t<Typography variant=\"h5\">Join a lobby</Typography>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"Lobby ID\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tonChange={(event) => handleChangeLobbyId(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tonChange={(event) => setAlias(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<Button type=\"submit\" variant=\"contained\" fullWidth>\r\n\t\t\t\t\tJoin\r\n\t\t\t\t</Button>\r\n\t\t\t</Box>\r\n\t\t\t<br></br>\r\n\t\t\t<Typography>Or</Typography>\r\n\t\t\t<br></br>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetIsInLobby(true);\r\n\t\t\t\t\tsetIsHost(true);\r\n\t\t\t\t\tsetAlias(\"Host\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCreate A Lobby\r\n\t\t\t</Button>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default LobbyInterFace;","import {\r\n  Box,\r\n  TextField,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItemText,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  ListItem,\r\n} from '@material-ui/core';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useState, useContext, Fragment } from 'react';\r\nimport { Context } from '../../context/ContextProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SendIcon } from '../Icons';\r\n\r\nconst ChatInterface = ({}) => {\r\n  // Grab the elements from ContextProvider.js\r\n  const {\r\n    chatMessagesAll,\r\n    chatMessagesTeam,\r\n    chat_sendToAll,\r\n    chat_sendToTeam,\r\n    hideAllChat,\r\n    hideTeamChat,\r\n    isHost,\r\n  } = useContext(Context);\r\n  const [selectedChatType, setSelectedChatType] = useState('allPlayer');\r\n\r\n  // Variable for text box\r\n  const [textTeam, setTextTeam] = useState('');\r\n  const [textAll, setTextAll] = useState('');\r\n\r\n  // Variable for scrolling to bottom\r\n  const messagesEndRefAll = React.createRef();\r\n  const messagesEndRefTeam = React.createRef();\r\n\r\n  // When the user clicks enter in all chat, send the message\r\n  // Click the allChatButton\r\n  const handleKeyUpAll = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      document.getElementById('allChatButton').click();\r\n    }\r\n  };\r\n\r\n  // When the user clicks enter in team chat, send the message\r\n  // Click the teamChatButton\r\n  const handleKeyUpTeam = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      document.getElementById('teamChatButton').click();\r\n    }\r\n  };\r\n\r\n  // Send to all chat function\r\n  const sendToAll = () => {\r\n    chat_sendToAll(textAll);\r\n    setTextAll('');\r\n  };\r\n\r\n  const sendToTeam = () => {\r\n    chat_sendToTeam(textTeam);\r\n    setTextTeam('');\r\n  };\r\n\r\n  // Scrolling for All Chat\r\n  const scrollToBottomAll = () => {\r\n    messagesEndRefAll.current?.scrollIntoView({ behavior: 'smooth' })\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottomAll()\r\n  }, [chatMessagesAll]);\r\n\r\n  // Scrolling for Team Chat\r\n  const scrollToBottomTeam = () => {\r\n    messagesEndRefTeam.current?.scrollIntoView({ behavior: 'smooth' })\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottomTeam()\r\n  }, [chatMessagesTeam]);\r\n\r\n\r\n  // Handle the text field changes\r\n  const handleChangeAll = e => {\r\n    // set the value of value\r\n    setTextAll(e.target.value); // Edit here\r\n  };\r\n\r\n  const handleChangeTeam = e => {\r\n    // set the value of value\r\n    setTextTeam(e.target.value); // edit here\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    textFieldStyling: {\r\n      marginBottom: '15px',\r\n      marginLeft: '15px',\r\n    },\r\n    typographyStyling: {\r\n      fontWeight: 600,\r\n      fontSize: '19px',\r\n      margin: '15px',\r\n    },\r\n    buttonStyling: {\r\n      marginTop: '25px',\r\n      border: '1px solid #D3D3D3 ',\r\n      position: 'absolute',\r\n      right: '15px',\r\n      bottom: '10px',\r\n    },\r\n    headerStyling: {\r\n      backgroundColor: '#FAF9F6',\r\n      borderTop: 1,\r\n      borderRight: 1,\r\n      borderLeft: 1,\r\n      border: '1px solid #D3D3D3',\r\n    },\r\n    chatMessageUserNameStyling: {\r\n      fontWeight: 600,\r\n      color: '#71797E',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // Return the actual chat box\r\n\r\n  return (\r\n    // Container for the chat box\r\n\r\n    <Box align=\"center\" position=\"absolute\" top=\"0px\" left=\"1%\">\r\n      {!hideAllChat && (\r\n        <Grid\r\n          container\r\n          style={{\r\n            boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n            borderRadius: '5px',\r\n            position: 'relative',\r\n            width: '400px',\r\n          }}\r\n        >\r\n          <Grid item xs={12} align=\"center\" className={classes.headerStyling}>\r\n            {!isHost && !hideTeamChat ? (\r\n              <Box display=\"flex\" marginX=\"30px\">\r\n                <FormControl>\r\n                  <InputLabel id=\"selectChatType\">*</InputLabel>\r\n                  <Select\r\n                    fontFamily=\"arial\"\r\n                    labelId=\"selectChatType\"\r\n                    id=\"selectChatType\"\r\n                    onChange={event => setSelectedChatType(event.target.value)}\r\n                  >\r\n                    <MenuItem value={'allPlayer'}> All players</MenuItem>\r\n                    <MenuItem value={'team'}>Team</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Typography className={classes.typographyStyling}>\r\n                  Chat with {selectedChatType === 'allPlayer' ? ' All Players' : 'Team'}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Typography className={classes.typographyStyling}>Chat Box All</Typography>\r\n            )}\r\n          </Grid>\r\n          {selectedChatType === 'allPlayer' ? (\r\n            <Fragment>\r\n              <Grid item xs={12}>\r\n                <List\r\n                  id=\"ChatBoxMessagesAll\"\r\n                  style={{\r\n                    maxHeight: '200px',\r\n                    width: '100%',\r\n                    overflow: 'scroll',\r\n                    alignItems: 'start',\r\n                    minHeight: '25vh',\r\n                  }}\r\n                >\r\n                  {chatMessagesAll &&\r\n                    { chatMessagesAll }.chatMessagesAll.map(chatMessage => {\r\n                      return (\r\n                        <ul>\r\n                          <ListItem\r\n                            style={{\r\n                              width: '100%',\r\n                            }}\r\n                          >\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography className={classes.chatMessageUserNameStyling}>\r\n                                  {chatMessage.alias}:\r\n                                </Typography>\r\n                              }\r\n                              secondary={<Typography>{chatMessage.message}</Typography>}\r\n                            />\r\n                          </ListItem>\r\n                        </ul>\r\n                      );\r\n                    })}\r\n                  <div ref={messagesEndRefAll} />\r\n                </List>\r\n              </Grid>\r\n              <Box display=\"flex\" id=\"allChatBox\">\r\n                <TextField\r\n                  value={textAll}\r\n                  onKeyUp={handleKeyUpAll}\r\n                  onChange={handleChangeAll}\r\n                  variant=\"standard\"\r\n                  label=\"Send message all\"\r\n                  className={classes.textFieldStyling}\r\n                />\r\n\r\n                <IconButton\r\n                  id=\"allChatButton\"\r\n                  onClick={sendToAll}\r\n                  size=\"small\"\r\n                  className={classes.buttonStyling}\r\n                >\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Grid item xs={12}>\r\n                <List\r\n                  id=\"ChatBoxMessagesTeam\"\r\n                  style={{\r\n                    maxHeight: '200px',\r\n                    width: '100%',\r\n                    overflow: 'scroll',\r\n                    alignItems: 'start',\r\n                    minHeight: '25vh',\r\n                  }}\r\n                >\r\n                  {chatMessagesTeam &&\r\n                    { chatMessagesTeam }.chatMessagesTeam.map(chatMessage => {\r\n                      return (\r\n                        <ul>\r\n                          <ListItem\r\n                            style={{\r\n                              display: 'flex ',\r\n                              marginLeft: '15px',\r\n                            }}\r\n                          >\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography className={classes.chatMessageUserNameStyling}>\r\n                                  {chatMessage.alias}:\r\n                                </Typography>\r\n                              }\r\n                              secondary={<Typography>{chatMessage.message}</Typography>}\r\n                            />\r\n                          </ListItem>\r\n                        </ul>\r\n                      );\r\n                    })}\r\n                  <div ref={messagesEndRefTeam} />\r\n                </List>\r\n              </Grid>\r\n              <Box display=\"flex\">\r\n                <TextField\r\n                  value={textTeam}\r\n                  onKeyUp={handleKeyUpTeam}\r\n                  onChange={handleChangeTeam}\r\n                  variant=\"standard\"\r\n                  label=\"Send message team\"\r\n                  className={classes.textFieldStyling}\r\n                />\r\n\r\n                <IconButton\r\n                  id=\"teamChatButton\"\r\n                  onClick={sendToTeam}\r\n                  size=\"small\"\r\n                  className={classes.buttonStyling}\r\n                >\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Fragment>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n","import './App.css';\r\n\r\nimport { useContext } from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport Layout from './components/Layout';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport HostInterface from './components/HostInterface/HostInterface';\r\nimport PlayerInterface from './components/PlayerInterface/PlayerInterface';\r\nimport { Context } from './context/ContextProvider';\r\n\r\nimport LobbyInterFace from './components/LobbyInterface/LobbyInterface';\r\nimport ChatInterface from './components/ChatInterface/ChatInterface';\r\n\r\nfunction App() {\r\n  const { isHost, isInLobby } = useContext(Context);\r\n\r\n  const TitleText = withStyles({\r\n    root: {\r\n      fontWeight: 600,\r\n      color: '#088F8F',\r\n    },\r\n  })(Typography);\r\n  const outerBoxStyling = {\r\n    display: 'flex',\r\n    margin: '15px',\r\n    position: 'relative',\r\n  };\r\n  const interfaceBoxStyling = {\r\n    width: '75vw',\r\n    height: '75vh',\r\n    margin: '15px',\r\n    padding: '20px',\r\n  };\r\n  const chatBoxStyling = {\r\n    width: '35vw',\r\n    position: 'sticky',\r\n    top: '15px',\r\n    margin: '5px',\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <br></br>\r\n      <br></br>\r\n      {isInLobby ? (\r\n        <Box sx={outerBoxStyling}>\r\n          <Box sx={interfaceBoxStyling}>{isHost ? <HostInterface /> : <PlayerInterface />}</Box>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Box sx={chatBoxStyling}>\r\n            <ChatInterface />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <LobbyInterFace />\r\n      )}\r\n      <br></br>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ThemeContextProvider from './context/ContextProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}